const jsbayes = require('jsbayes');

let logic = require("../utils/LogicNetBuilder");
let wrong_net = require("../networks/wrong.network");
let net = require("../networks/rete.json");
let net2 = require("../networks/rete2.json");

global.console = {
    warn: jest.fn(),
    log: jest.fn(),
    info: jest.fn()
};

let logicTest = new logic.constructor;

test("Verify initial values" , () => {
    expect(console.info).toBeCalledWith("LogicNetBuilder");
    expect(logicTest.logicNet).toEqual(null);
    expect(logicTest.logicNets).toEqual([]);
});

test("Verify builder" , () => {
   logicTest.buildLogicNet(net);
   expect(JSON.stringify(logicTest.logicNet)).toBe("{\"nodes\":[{\"name\":\"nodo1\",\"values\":[\"low\",\"medium\",\"high\"],\"value\":-1,\"parents\":[{\"name\":\"nodo2\",\"values\":[\"true\",\"false\"],\"value\":-1,\"parents\":[{\"name\":\"nodo3\",\"values\":[\"bad\",\"good\"],\"value\":-1,\"parents\":[],\"wasSampled\":false,\"cpt\":[0.8624393705848653,0.13756062941513464]}],\"wasSampled\":false,\"dirty\":true,\"cpt\":[[0.6042297731559362,0.39577022684406377],[0.715334321447218,0.284665678552782]]}],\"wasSampled\":false,\"dirty\":true,\"cpt\":[[0.6249878579187031,0.36396226639342966,0.011049875687867187],[0.3610123696700597,0.3376138305318408,0.30137379979809953]]},{\"name\":\"nodo2\",\"values\":[\"true\",\"false\"],\"value\":-1,\"parents\":[{\"name\":\"nodo3\",\"values\":[\"bad\",\"good\"],\"value\":-1,\"parents\":[],\"wasSampled\":false,\"cpt\":[0.8624393705848653,0.13756062941513464]}],\"wasSampled\":false,\"dirty\":true,\"cpt\":[[0.6042297731559362,0.39577022684406377],[0.715334321447218,0.284665678552782]]},{\"name\":\"nodo3\",\"values\":[\"bad\",\"good\"],\"value\":-1,\"parents\":[],\"wasSampled\":false,\"cpt\":[0.8624393705848653,0.13756062941513464]},{\"name\":\"nodo4\",\"values\":[\"no_good\",\"ok\",\"very_good\"],\"value\":-1,\"parents\":[],\"wasSampled\":false,\"cpt\":[0.45092346697251184,0.5428601698964853,0.006216363131002771]},{\"name\":\"nodo5\",\"values\":[\"this\",\"is\",\"a\",\"test\"],\"value\":-1,\"parents\":[{\"name\":\"nodo4\",\"values\":[\"no_good\",\"ok\",\"very_good\"],\"value\":-1,\"parents\":[],\"wasSampled\":false,\"cpt\":[0.45092346697251184,0.5428601698964853,0.006216363131002771]}],\"wasSampled\":false,\"dirty\":true,\"cpt\":[[0.30575461891819666,0.15265229045006706,0.24656760181331805,0.2950254888184182],[0.22993282633725845,0.28543765047032904,0.22462783730936964,0.2600016858830429],[0.1251429775053981,0.23875387906050305,0.09812179924399832,0.5379813441901005]]},{\"name\":\"nodo6\",\"values\":[\"How\",\"many\",\"threshold\",\"do\",\"you\",\"want\",\"question\"],\"value\":-1,\"parents\":[{\"name\":\"nodo3\",\"values\":[\"bad\",\"good\"],\"value\":-1,\"parents\":[],\"wasSampled\":false,\"cpt\":[0.8624393705848653,0.13756062941513464]},{\"name\":\"nodo5\",\"values\":[\"this\",\"is\",\"a\",\"test\"],\"value\":-1,\"parents\":[{\"name\":\"nodo4\",\"values\":[\"no_good\",\"ok\",\"very_good\"],\"value\":-1,\"parents\":[],\"wasSampled\":false,\"cpt\":[0.45092346697251184,0.5428601698964853,0.006216363131002771]}],\"wasSampled\":false,\"dirty\":true,\"cpt\":[[0.30575461891819666,0.15265229045006706,0.24656760181331805,0.2950254888184182],[0.22993282633725845,0.28543765047032904,0.22462783730936964,0.2600016858830429],[0.1251429775053981,0.23875387906050305,0.09812179924399832,0.5379813441901005]]}],\"wasSampled\":false,\"dirty\":true,\"cpt\":[[[0.1550291780535108,0.20086329535438616,0.1885927986566051,0.15031064585078277,0.19887425000234146,0.06169809420468924,0.04463173787768437],[0.15799414525288125,0.2592046777371376,0.06488087477110056,0.16383125941948737,0.09382699347453276,0.05810378737484049,0.2021582619700201],[0.0030372573641707966,0.06264861517212826,0.20891309905933678,0.24516602964799375,0.34866851370195356,0.076590605316695,0.05497587973772188],[0.03591462432576359,0.3320792089090587,0.05426995844301734,0.050815987253223976,0.3293533429697854,0.18977495747451148,0.007791920624639735]],[[0.24707896552973066,0.28486873106989963,0.042722744370612825,0.008353712150040033,0.2447538298291428,0.12044778920755828,0.05177422784301581],[0.26234700952911927,0.052996743968408366,0.01032692023013438,0.3392848846904694,0.15155715628623972,0.0438642530628774,0.13962303223275147],[0.2373793729399555,0.12155536800468086,0.12235501477962923,0.1310321563997501,0.07402351530408083,0.12725245360942658,0.18640211896247674],[0.0070698014425027295,0.04272570044759093,0.10193533742858744,0.3188943755791412,0.08141955623721181,0.26334996933320576,0.18460525953176007]]]}],\"saveSamples\":false,\"samples\":[]}"
   );
});

test("Verify all builder" , () => {
   let nets = [net,net2];
   logicTest.buildAllNets(nets);
   expect(logicTest.logicNets.length).toEqual(2);
});



